[1/12] Performing build step for 'bootloader'
[1/1] cd /home/ricsi/IoT/Firmware/Smart_Lock/build/bootloader/esp-idf/esptool_py && /home/ricsi/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/ricsi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/ricsi/IoT/Firmware/Smart_Lock/build/bootloader/bootloader.bin
Bootloader binary size 0x54e0 bytes. 0x2b20 bytes (34%) free.
[2/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
/home/ricsi/IoT/Firmware/Smart_Lock/main/main.cpp: In function 'void app_main()':
/home/ricsi/IoT/Firmware/Smart_Lock/main/main.cpp:16:17: warning: unused variable 'TAG' [-Wunused-variable]
   16 |     const char *TAG = "ESP32_LOCK_UART";
      |                 ^~~
[3/10] Building CXX object esp-idf/zigbee/CMakeFiles/__idf_zigbee.dir/src/zigbee.cpp.obj
/home/ricsi/IoT/Firmware/Smart_Lock/components/zigbee/src/zigbee.cpp: In static member function 'static esp_err_t ZigbeeComponent::Zigbee::attribute_handler(const esp_zb_zcl_set_attr_value_message_t*)':
/home/ricsi/IoT/Firmware/Smart_Lock/components/zigbee/src/zigbee.cpp:15:45: warning: comparison between 'const enum esp_zb_zcl_attr_type_t' and 'enum esp_zb_zcl_door_lock_cmd_id_t' [-Wenum-compare]
   15 |             if(message->attribute.data.type == ESP_ZB_ZCL_CMD_DOOR_LOCK_UNLOCK_DOOR) {
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/ricsi/IoT/Firmware/Smart_Lock/components/zigbee/src/zigbee.cpp: In static member function 'static void ZigbeeComponent::Zigbee::init()':
/home/ricsi/IoT/Firmware/Smart_Lock/components/zigbee/src/zigbee.cpp:62:9: warning: missing initializer for member 'esp_zb_radio_config_t::radio_uart_config' [-Wmissing-field-initializers]
   62 |         };
      |         ^
/home/ricsi/IoT/Firmware/Smart_Lock/components/zigbee/src/zigbee.cpp:62:9: warning: missing initializer for member 'esp_zb_host_config_t::host_uart_config' [-Wmissing-field-initializers]
[4/10] Linking C static library esp-idf/zigbee/libzigbee.a
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable main.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32c6 image...
Merged 1 ELF section
Successfully created esp32c6 image.
Generated /home/ricsi/IoT/Firmware/Smart_Lock/build/main.bin
[9/10] cd /home/ricsi/IoT/Firmware/Smart_Lock/build/esp-idf/esptool_py && /home/ricsi/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/ricsi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ricsi/IoT/Firmware/Smart_Lock/build/partition_table/partition-table.bin /home/ricsi/IoT/Firmware/Smart_Lock/build/main.bin
main.bin binary size 0xd8060 bytes. Smallest app partition is 0xe1000 bytes. 0x8fa0 bytes (4%) free.
Warning: The smallest app partition is nearly full (4% free space left)!
[9/10] cd /home/ricsi/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/ricsi/esp/esp-idf -D "SERIAL_TOOL=/home/ricsi/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/home/ricsi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c6" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/ricsi/IoT/Firmware/Smart_Lock/build -P /home/ricsi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32c6 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev5
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-C6 (QFN40) (revision v0.0)
Features: WiFi 6, BT 5, IEEE802.15.4
Crystal is 40MHz
MAC: 40:4c:ca:ff:fe:4d:ba:9c
BASE MAC: 40:4c:ca:4d:ba:9c
MAC_EXT: ff:fe
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x000e8fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21728 bytes to 13118...
Writing at 0x00000000... (100 %)
Wrote 21728 bytes (13118 compressed) at 0x00000000 in 0.6 seconds (effective 288.0 kbit/s)...
Hash of data verified.
Compressed 884832 bytes to 408398...
Writing at 0x00010000... (4 %)
Writing at 0x0001d976... (8 %)
Writing at 0x0002d177... (12 %)
Writing at 0x0003c9e4... (16 %)
Writing at 0x0004444d... (20 %)
Writing at 0x0004ad88... (24 %)
Writing at 0x000521e4... (28 %)
Writing at 0x0005a10c... (32 %)
Writing at 0x000628b2... (36 %)
Writing at 0x0006b062... (40 %)
Writing at 0x000731aa... (44 %)
Writing at 0x0007b36c... (48 %)
Writing at 0x000830c2... (52 %)
Writing at 0x0008b36f... (56 %)
Writing at 0x00093230... (60 %)
Writing at 0x0009afbc... (64 %)
Writing at 0x000a4477... (68 %)
Writing at 0x000ad1a2... (72 %)
Writing at 0x000b53bd... (76 %)
Writing at 0x000bd80b... (80 %)
Writing at 0x000c5849... (84 %)
Writing at 0x000cd59d... (88 %)
Writing at 0x000d427d... (92 %)
Writing at 0x000da076... (96 %)
Writing at 0x000e0d58... (100 %)
Wrote 884832 bytes (408398 compressed) at 0x00010000 in 9.9 seconds (effective 715.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 136...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (136 compressed) at 0x00008000 in 0.1 seconds (effective 436.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
